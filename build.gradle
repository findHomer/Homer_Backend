plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.17'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // QueryDSL 플러그인
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = '8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    mavenCentral()
}

ext {
    queryDslVersion = '5.0.0' // QueryDSL 버전
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation "io.jsonwebtoken:jjwt-api:0.11.5"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
	implementation "io.jsonwebtoken:jjwt-jackson:0.11.5"
    //test 관련 의존성 설정
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly  'org.projectlombok:lombok'
    testAnnotationProcessor  'org.projectlombok:lombok'

	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // QueryDSL 관련 의존성
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"
}

// QueryDSL 소스 디렉토리 설정
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
    useJUnitPlatform()
}